#!/usr/bin/env python3
import itertools
import subprocess
import sys


HELP = """Usage: nixbang SCRIPT_FILE

nixbang is designed to be used as the shebang of a script. It will
execute the script with the given command in a nix-shell environment
with the given packages.

Example:

  #!/usr/bin/env nixbang
  # command = python3
  # packages = python34 python34Packages.requests tree
"""

def read_file(path):
    def options():
        with open(path) as f:
            for line in itertools.islice(f, 1, None):
                if not line.startswith('#'):
                    return
                k, v = line[1:].split('=')
                yield k.strip(), v.strip()
    return dict(options())


def main():
    try:
        target = sys.argv[1]
    except IndexError:
        target = '-h'
    if target in ('-h', '--help'):
        print(HELP)
        return
    options = read_file(target)
    args = ''
    if len(sys.argv) > 1:
       args = ' '.join(sys.argv[2:])

    command = '%s %s %s' % (options['command'], target, args)
    subprocess.call(['nix-shell', '--command', command,
                     '-p'] + options['packages'].split())


if __name__ == '__main__':
    main()
